# To list all containers:
docker ps -a

# To list all images:
docker images

# Rechercher une image sur Docker Hub:
docker search <nom_image>

# Récupérer une image depuis un dépôt:
docker pull <image>

# Élevation de privilège à condition que l'utilisateur courant fasse partie du group docker ou root:
docker run -v /:/mnt --rm -it alpine chroot /mnt sh

    -v : volume, permet de monter un repertoire local dans le container
    -i : interactive
    -t : tty

# Lancer un container et binder un port local avec le port exposé du container:
docker run -d -p <local_port>:<container_port> <image> 

    -d : detach, permet de faire tourner le container en arrière plan 
    -p : publish, permet un bind des ports

# To start a container with an interactive shell:
docker run -ti <image-name> /bin/bash

# To "shell" into a running container (docker-1.3+):
docker exec -ti <container-name> bash

# To inspect a running container:
docker inspect <container-name> (or <container-id>)

# To get the process ID for a container:
docker inspect --format {{.State.Pid}} <container-name-or-id>

# To list (and pretty-print) the current mounted volumes for a container:
docker inspect --format='{{json .Volumes}}' <container-id> | python -mjson.tool

# To copy files/folders between a container and your host:
docker cp foo.txt mycontainer:/foo.txt

# To remove all stopped containers:
docker rm $(docker ps -qa)

# To remove all untagged images:
docker rmi $(docker images | grep "^<none>" | awk "{print $3}")
